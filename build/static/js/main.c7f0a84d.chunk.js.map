{"version":3,"sources":["redux/coins/coins.js","redux/global/global.js","redux/configureStore.js","crypto.png","Coin.js","blockchain.png","GlobalData.js","HomePage.js","CoinDetails.js","App.js","index.js"],"names":["FETCH_COINS_DATA","initialState","coinsReducer","state","action","type","payload","FETCH_GLOBAL_DATA","globalCryptoReducer","reducer","combineReducers","store","createStore","applyMiddleware","logger","thunk","Coin","props","id","name","symbol","priceUsd","priceBtc","mC","tSp","rank","navigate","useNavigate","toDollars","Intl","NumberFormat","style","currency","ListGroup","Item","onClick","className","src","crypto","alt","toUpperCase","format","GlobalCryptoData","coinsCount","activeMarkets","volumeChange","blockchain","HomePage","storeData","useSelector","dispatch","useDispatch","useEffect","length","a","axios","get","response","data","map","price_usd","price_btc","marketCap","market_cap_usd","totalSupply","tsupply","coins_count","active_markets","totalMcap","total_mcap","totalVolume","total_volume","volume_change","coins","globalData","useState","coinInput","setInput","listCoins","filter","coin","toLowerCase","includes","Container","Form","Control","value","onInput","e","target","required","placeholder","CoinDetails","useLocation","App","Navbar","bg","variant","Nav","Link","as","NavLink","to","Button","Brand","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f0a84d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst FETCH_COINS_DATA = 'FETCH_COINS_DATA';\nconst END_POINT_URL = 'https://api.coinlore.net/api/tickers/';\n\nconst initialState = [];\n\nexport const fetchCoins = () => async (dispatch) => {\n  const response = await axios.get(END_POINT_URL);\n  const payload = response.data.data.map((data) => {\n    const { id } = data;\n    const { name } = data;\n    const { symbol } = data;\n    const priceUsd = data.price_usd;\n    const priceBtc = data.price_btc;\n    const marketCap = data.market_cap_usd;\n    const totalSupply = data.tsupply;\n    const { rank } = data;\n    const updatedData = {\n      id,\n      name,\n      symbol,\n      priceUsd,\n      priceBtc,\n      marketCap,\n      totalSupply,\n      rank,\n    };\n    return updatedData;\n  });\n  dispatch({\n    type: FETCH_COINS_DATA,\n    payload,\n  });\n};\n\nconst coinsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COINS_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default coinsReducer;\n","import axios from 'axios';\n\nconst FETCH_GLOBAL_DATA = 'FETCH_GLOBAL_DATA';\nconst END_POINT_URL = 'https://api.coinlore.net/api/global/';\n\nconst initialState = [];\n\nexport const fetchGloblalData = () => async (dispatch) => {\n  const response = await axios.get(END_POINT_URL);\n  const payload = response.data.map((data) => {\n    const coinsCount = data.coins_count;\n    const activeMarkets = data.active_markets;\n    const totalMcap = data.total_mcap;\n    const totalVolume = data.total_volume;\n    const volumeChange = data.volume_change;\n    const updatedData = {\n      coinsCount,\n      activeMarkets,\n      totalMcap,\n      totalVolume,\n      volumeChange,\n    };\n    return updatedData;\n  });\n  dispatch({\n    type: FETCH_GLOBAL_DATA,\n    payload,\n  });\n};\n\nconst globalCryptoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_GLOBAL_DATA:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default globalCryptoReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport coinsReducer from './coins/coins';\nimport globalCryptoReducer from './global/global';\n\nconst reducer = combineReducers({\n  globalCryptoReducer,\n  coinsReducer,\n});\n\nconst store = createStore(reducer, applyMiddleware(logger, thunk));\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/crypto.e9cd8bc9.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap';\nimport crypto from './crypto.png';\nimport './Coin.css';\n\nconst Coin = (props) => {\n  const {\n    id, name, symbol, priceUsd, priceBtc, mC, tSp, rank,\n  } = props;\n\n  const navigate = useNavigate();\n\n  const goToDetails = () => {\n    navigate('details', {\n      state: {\n        id, name, symbol, priceUsd, priceBtc, mC, tSp, rank,\n      },\n    });\n  };\n\n  const options2 = { style: 'currency', currency: 'USD' };\n  const toDollars = new Intl.NumberFormat('en-US', options2);\n\n  return (\n    <ListGroup.Item key={id} onClick={goToDetails} data-testid=\"list-group-item\">\n      <div className=\"d-flex\" id=\"data-container\">\n        <div className=\"bottom-data d-flex\">\n          <img src={crypto} alt=\"eth\" className=\"eth-icon\" />\n          <i className=\"far fa-arrow-alt-circle-right\" />\n        </div>\n        <h3>{name.toUpperCase()}</h3>\n        <p>\n          {' ( '}\n          {symbol}\n          {' ) '}\n        </p>\n        <p>\n          { toDollars.format(priceUsd) }\n        </p>\n      </div>\n    </ListGroup.Item>\n  );\n};\n\nCoin.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  symbol: PropTypes.string.isRequired,\n  priceUsd: PropTypes.string.isRequired,\n  priceBtc: PropTypes.string.isRequired,\n  mC: PropTypes.string.isRequired,\n  tSp: PropTypes.string.isRequired,\n  rank: PropTypes.number.isRequired,\n};\n\nexport default Coin;\n","export default __webpack_public_path__ + \"static/media/blockchain.886e8c36.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport blockchain from './blockchain.png';\nimport './GlobalData.css';\n\nconst GlobalCryptoData = (props) => {\n  const {\n    coinsCount, activeMarkets, volumeChange,\n  } = props;\n\n  return (\n    <div className=\"global-data-container d-flex\" data-testid=\"global-crypto-data-container\">\n      <div className=\"d1\">\n        <img src={blockchain} alt=\"blockchain\" className=\"blockchain-icon\" />\n      </div>\n      <div className=\"d2\">\n        <h2>GLOBAL STATS </h2>\n        <p>\n          {'Total coins on market: '}\n          {coinsCount}\n        </p>\n        <p>\n          {'Total active markets: '}\n          {activeMarkets}\n        </p>\n        <p>\n          {'Volume of change: '}\n          {volumeChange}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nGlobalCryptoData.propTypes = {\n  coinsCount: PropTypes.number.isRequired,\n  activeMarkets: PropTypes.number.isRequired,\n  volumeChange: PropTypes.string.isRequired,\n};\n\nexport default GlobalCryptoData;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, ListGroup, Form } from 'react-bootstrap';\nimport { fetchCoins } from './redux/coins/coins';\nimport { fetchGloblalData } from './redux/global/global';\nimport Coin from './Coin';\nimport GlobalCryptoData from './GlobalData';\n\nconst HomePage = () => {\n  const storeData = useSelector((state) => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (\n      storeData.coinsReducer.length === 0 && storeData.globalCryptoReducer.length === 0\n    ) {\n      dispatch(fetchCoins());\n      dispatch(fetchGloblalData());\n    }\n  }, []);\n  const coins = storeData.coinsReducer;\n  const globalData = storeData.globalCryptoReducer;\n  const [coinInput, setInput] = useState('');\n  const listCoins = coins.filter(\n    (coin) => coinInput === '' || coin.name.toLowerCase().includes(coinInput),\n  );\n  return (\n    <Container>\n      {globalData.map((data) => (\n        <GlobalCryptoData\n          key={data.coinsCount}\n          coinsCount={data.coinsCount}\n          activeMarkets={data.activeMarkets}\n          volumeChange={data.volumeChange}\n        />\n      ))}\n      <Form.Control\n        value={coinInput}\n        onInput={(e) => setInput(e.target.value)}\n        type=\"text\"\n        required\n        placeholder=\"Search by Crypto name\"\n        id=\"name-input\"\n      />\n      <div id=\"home-tag\">\n        <p>MOST POPULAR COINS</p>\n      </div>\n      <ListGroup data-testid=\"list-container\">\n        {listCoins.map((coin) => (\n          <Coin\n            key={coin.id}\n            id={coin.id}\n            name={coin.name}\n            symbol={coin.symbol}\n            priceUsd={coin.priceUsd}\n            priceBtc={coin.priceBtc}\n            mC={coin.marketCap}\n            tSp={coin.totalSupply}\n            rank={coin.rank}\n          />\n        ))}\n      </ListGroup>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport {\n  useLocation,\n} from 'react-router-dom';\nimport { ListGroup } from 'react-bootstrap';\nimport crypto from './crypto.png';\nimport './CoinDetails.css';\n\nconst CoinDetails = () => {\n  const { state } = useLocation();\n  const options2 = { style: 'currency', currency: 'USD' };\n  const toDollars = new Intl.NumberFormat('en-US', options2);\n  return (\n    <div className=\"full-details-container d-flex\">\n      <div className=\"title-container\">\n        <img src={crypto} alt=\"eth\" id=\"eth-logo\" />\n        <div className=\"alias\">\n          <h2>{ state.name }</h2>\n          <h3>\n            {' ( '}\n            { state.symbol }\n            {' ) '}\n          </h3>\n        </div>\n      </div>\n      <div id=\"detail-tag\">\n        <h4>\n          { state.name }\n          {' Data '}\n        </h4>\n      </div>\n      <ListGroup className=\"data-container\">\n        <ListGroup.Item className=\"row\">\n          <h3>\n            {'Full-Name: '}\n            { state.name }\n          </h3>\n        </ListGroup.Item>\n        <ListGroup.Item className=\"row\">\n          <h3>\n            {'Symbol: '}\n            { state.symbol }\n          </h3>\n        </ListGroup.Item>\n        <ListGroup.Item className=\"row\">\n          <h3>\n            {'Price: '}\n            { toDollars.format(state.priceUsd) }\n          </h3>\n        </ListGroup.Item>\n        <ListGroup.Item className=\"row\">\n          <h3>\n            {'BTC Price: ( '}\n            { state.priceBtc }\n            {' ) BTC'}\n          </h3>\n        </ListGroup.Item>\n        <ListGroup.Item className=\"row\">\n          <h3>\n            {'Marketcap: '}\n            { toDollars.format(state.mC) }\n          </h3>\n        </ListGroup.Item>\n        <ListGroup.Item className=\"row\">\n          <h3>\n            {'Total Supply: '}\n            { state.tSp }\n          </h3>\n        </ListGroup.Item>\n        <ListGroup.Item className=\"row\">\n          <h3>\n            {'Rank: '}\n            { state.rank }\n          </h3>\n        </ListGroup.Item>\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default CoinDetails;\n","import React from 'react';\nimport {\n  Navbar, Button, Nav,\n} from 'react-bootstrap';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  NavLink,\n} from 'react-router-dom';\nimport store from './redux/configureStore';\nimport HomePage from './HomePage';\nimport CoinDetails from './CoinDetails';\nimport './App.css';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <header>\n        <Navbar bg=\"light\" variant=\"light\">\n          <Nav.Link as={NavLink} to=\"/\">\n            <Button>\n              <i className=\"fas fa-arrow-left\" />\n            </Button>\n          </Nav.Link>\n          <Nav.Link as={NavLink} to=\"/\">\n            <Navbar.Brand>Crypto Currencies</Navbar.Brand>\n          </Nav.Link>\n          <Navbar.Brand>2021</Navbar.Brand>\n        </Navbar>\n      </header>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/details\" element={<CoinDetails />} />\n      </Routes>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}